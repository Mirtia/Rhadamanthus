/**
 * @file offsets.h
 * @brief This file contains offsets used for introspection.
 * @version 0.0
 * @date 2025-08-31
 *
 * @copyright Copyright (c) 2025
 *
 * @note Offsets extracted using pahole on vmlinux-5.15.0-139-generic
 */
#ifndef OFFSETS_H
#define OFFSETS_H

#define LINUX_PTR_SIZE 8

// task_struct offsets
#define LINUX_OFF_TASKS 0x8B8
#define LINUX_OFF_TASK_PID 0x9C0
#define LINUX_OFF_TASK_TGID 0x9C4
#define LINUX_OFF_TASK_COMM 0xBB8
#define LINUX_OFF_TASK_FILES 0xC00
#define LINUX_TASK_COMM_LEN 16

// Credentials
#define LINUX_CRED_OFFSET 0xBA8
#define LINUX_STATE_OFFSET 0x18
#define LINUX_UID_OFFSET 0x8
#define LINUX_GID_OFFSET 0xC
#define LINUX_EUID_OFFSET 0x18
#define LINUX_EGID_OFFSET 0x1C

// files_struct / fdtable
#define LINUX_OFF_FILES_FDT 0x20
#define LINUX_OFF_FDTABLE_MAXFDS 0x00
#define LINUX_OFF_FDTABLE_FD 0x08

// struct file
#define LINUX_OFF_FILE_F_OP 0x28
#define LINUX_OFF_FILE_PRIVATE_DATA 0xC8

// inet_hashinfo
#define LINUX_INET_HASHINFO_EHASH_OFFSET 0x0
#define LINUX_INET_HASHINFO_EHASH_MASK_OFFSET 0x10
#define LINUX_INET_HASHINFO_BHASH_OFFSET 0x20
#define LINUX_INET_HASHINFO_BHASH_SIZE_OFFSET 0x28
#define LINUX_INET_HASHINFO_LHASH2_OFFSET 0x30

// inet_ehash_bucket
#define LINUX_INET_EHASH_BUCKET_SIZE 0x8
#define LINUX_INET_EHASH_BUCKET_CHAIN_OFFSET 0x0
#define LINUX_HLIST_NULLS_HEAD_FIRST_OFFSET 0x0

// sock_common
#define LINUX_SOCK_COMMON_OFFSET 0x0

// Socket address structure offsets
#define LINUX_SOCKADDR_SA_FAMILY_OFFSET 0x0
#define LINUX_SOCKADDR_IN_SIN_PORT_OFFSET 0x2
#define LINUX_SOCKADDR_IN_SIN_ADDR_OFFSET 0x4

#define LINUX_SKC_DADDR_OFFSET 0x0
#define LINUX_SKC_RCV_SADDR_OFFSET 0x4
#define LINUX_SKC_DPORT_OFFSET 0xC
#define LINUX_SKC_NUM_OFFSET 0xE
#define LINUX_SKC_STATE_OFFSET 0x12
#define LINUX_SKC_FAMILY_OFFSET 0x10
#define LINUX_SKC_NODE_OFFSET 0x68
#define LINUX_SKC_NODE_NEXT_OFFSET 0x0

// netfilter hooks
#define LINUX_NET_NF_OFFSET 0x40
#define LINUX_NF_HOOKS_OFFSET 0x0
// Corrected offsets from struct netns_nf:
#define LINUX_NETNF_HOOKS_IPV4_OFFSET 0x78
#define LINUX_NETNF_HOOKS_IPV6_OFFSET 0xA0
#define LINUX_NETNF_HOOKS_ARP_OFFSET 0xC8
#define LINUX_NETNF_HOOKS_BRIDGE_OFFSET 0xE0

// Corrected offsets from struct nf_hook_entries:
#define LINUX_NF_HOOK_ENTRIES_NUM_OFFSET 0x0
#define LINUX_NF_HOOK_ENTRIES_PAD 0x8
#define LINUX_NF_HOOK_ENTRY_SIZE 0x10

// Netfilter hook operations structure offsets
#define LINUX_NF_HOOK_OPS_HOOK_OFFSET 0x0
#define LINUX_NF_HOOK_OPS_DEV_OFFSET 0x8
#define LINUX_NF_HOOK_OPS_PRIV_OFFSET 0x10
#define LINUX_NF_HOOK_OPS_PF_OFFSET 0x18
#define LINUX_NF_HOOK_OPS_HOOKNUM_OFFSET 0x1C
#define LINUX_NF_HOOK_OPS_PRIORITY_OFFSET 0x20

// struct module offsets
#define LINUX_MODULE_STATE_OFFSET 0x00
#define LINUX_MODULE_LIST_OFFSET 0x08
#define LINUX_MODULE_NAME_OFFSET 0x18
#define LINUX_MODULE_MKOBJ_OFFSET 0x50
#define LINUX_MODULE_CORE_LAYOUT_OFFSET 0x140
#define LINUX_MODULE_INIT_LAYOUT_OFFSET 0x190
#define LINUX_MODULE_SECT_ATTRS_OFFSET 0x230
#define LINUX_MODULE_NOTES_ATTRS_OFFSET 0x238

// struct module_layout offsets
#define LINUX_MODULE_LAYOUT_BASE_OFFSET 0x00
#define LINUX_MODULE_LAYOUT_SIZE_OFFSET 0x08
#define LINUX_MODULE_LAYOUT_TEXT_SIZE_OFFSET 0x0C
#define LINUX_MODULE_LAYOUT_RO_SIZE_OFFSET 0x10

// kobject state detection
#define LINUX_MODULE_KOBJ_OFFSET 0x00
#define LINUX_MODULE_KOBJ_STATE_OFFSET 0x3C

// bpf_prog
#define LINUX_BPF_PROG_TYPE_OFFSET 0x04
#define LINUX_BPF_PROG_JITED_PROG_LEN_OFFSET 0x10
#define LINUX_BPF_PROG_STATS_OFFSET 0x20
#define LINUX_BPF_PROG_ACTIVE_OFFSET 0x28
#define LINUX_BPF_PROG_AUX_OFFSET 0x38
#define LINUX_BPF_PROG_SIZE 0x48

// bpf_prog_aux
#define LINUX_BPF_PROG_AUX_ID_OFFSET 0x20
#define LINUX_BPF_PROG_AUX_NAME_OFFSET 0x210

// bpf_map
#define LINUX_BPF_MAP_TYPE_OFFSET 0x18
#define LINUX_BPF_MAP_KEY_SIZE_OFFSET 0x1C
#define LINUX_BPF_MAP_VALUE_SIZE_OFFSET 0x20
#define LINUX_BPF_MAP_MAX_ENTRIES_OFFSET 0x24
#define LINUX_BPF_MAP_FLAGS_OFFSET 0x28
#define LINUX_BPF_MAP_ID_OFFSET 0x34
#define LINUX_BPF_MAP_NAME_OFFSET 0x58

// bpf_link
#define LINUX_OFF_BPF_LINK_ID 0x08

// BPF constants
#define LINUX_BPF_OBJ_NAME_LEN 16

#define LINUX_OFF_IDR_RT 0x00

#define LINUX_OFF_XARRAY_XA_HEAD 0x08

// xa_node structure
#define LINUX_OFF_XA_NODE_SHIFT 0x00
#define LINUX_OFF_XA_NODE_COUNT 0x02
#define LINUX_OFF_XA_NODE_SLOTS 0x28
#define LINUX_XA_CHUNK_SIZE 64

#define LINUX_FTRACE_OPS_FUNC_OFFSET 0x00
#define LINUX_FTRACE_OPS_NEXT_OFFSET 0x08
#define LINUX_FTRACE_OPS_FLAGS_OFFSET 0x10
// #define LINUX_FTRACE_OPS_PRIVATE_OFFSET 0x1
// #define LINUX_FTRACE_OPS_SAVED_FUNC_OFFSET 0x2
#define LINUX_FTRACE_OPS_LOCAL_HASH_OFFSET 0x28
#define LINUX_FTRACE_OPS_FUNC_HASH_OFFSET 0x58
#define LINUX_FTRACE_OPS_OLD_HASH_OFFSET 0x60
#define LINUX_FTRACE_OPS_TRAMPOLINE_OFFSET 0x90
#define LINUX_FTRACE_OPS_TRAMPOLINE_SIZE_OFFSET 0x98
#define LINUX_FTRACE_OPS_LIST_OFFSET 0xA0
#define LINUX_FTRACE_OPS_SIZE 0xB0

#define LINUX_OFFSET_TASK_IO_URING 0xC08
#define LINUX_OFFSET_IO_URING_TASK_LAST 0x20
#define LINUX_OFFSET_IO_RING_CTX_RINGS 0xD0
#define LINUX_OFFSET_IO_RINGS_SQ_ENTRIES 0x10
#define LINUX_OFFSET_IO_RINGS_CQ_ENTRIES 0x14

#define LINUX_PTREGS_OFF_R10 0x38
#define LINUX_PTREGS_OFF_R9 0x40
#define LINUX_PTREGS_OFF_R8 0x48
#define LINUX_PTREGS_OFF_AX 0x50
#define LINUX_PTREGS_OFF_CX 0x58
#define LINUX_PTREGS_OFF_DX 0x60
#define LINUX_PTREGS_OFF_SI 0x68
#define LINUX_PTREGS_OFF_DI 0x70
#define LINUX_PTREGS_OFF_ORIG_AX 0x78
#define LINUX_PTREGS_OFF_IP 0x80
#define LINUX_PTREGS_OFF_FLAGS 0x90
#define LINUX_PTREGS_OFF_SP 0x98

// TODO: These offsets have to be extracted using pahole and may be later used for the directory string matching state callback.

// These are placeholders for future filesystem state callbacks, not used currently.
/*
// dentry structure offsets
#define LINUX_OFF_DENTRY_D_NAME 0x00
#define LINUX_OFF_DENTRY_D_INODE 0x00
#define LINUX_OFF_DENTRY_D_SUBDIRS 0x00
#define LINUX_OFF_DENTRY_D_CHILD 0x00

// qstr structure offsets
#define LINUX_OFF_QSTR_NAME 0x00

// inode structure offsets
#define LINUX_OFF_INODE_I_MODE 0x00
#define LINUX_OFF_INODE_I_SIZE 0x00
#define LINUX_OFF_INODE_I_UID 0x00
#define LINUX_OFF_INODE_I_GID 0x00
#define LINUX_OFF_INODE_I_MTIME 0x00
*/

// ftrace_ops structure offsets

// kset structure offsets (for advanced module detection)
#define LINUX_KSET_LIST_OFFSET 0x00

// kobject structure offsets
#define LINUX_KOBJECT_ENTRY_OFFSET 0x08
#define LINUX_KOBJECT_NAME_OFFSET 0x00

// module_kobject structure offsets
#define LINUX_MODULE_KOBJECT_MOD_OFFSET 0x40

// Red-black tree node offsets
#define LINUX_RB_NODE_LEFT_OFFSET 0x10
#define LINUX_RB_NODE_RIGHT_OFFSET 0x08
#define LINUX_RB_ROOT_RB_NODE_OFFSET 0x00

// Latch tree node offsets
#define LINUX_LATCH_TREE_NODE_NODE_OFFSET 0x00

// Module tree node offsets
#define LINUX_MOD_TREE_NODE_NODE_OFFSET 0x08
#define LINUX_MOD_TREE_NODE_MOD_OFFSET 0x00

// Module tree root offsets
#define LINUX_MOD_TREE_ROOT_TREE_OFFSET 0x00

// VMA (Virtual Memory Area) offsets
#define LINUX_VMAP_AREA_VA_START_OFFSET 0x00
#define LINUX_VMAP_AREA_VA_END_OFFSET 0x08
#define LINUX_VMAP_AREA_RB_NODE_OFFSET 0x10

// Module bug list offset (in module structure)
#define LINUX_MODULE_BUG_LIST_OFFSET 0x1f0

// Module taints offset (in module structure)
#define LINUX_MODULE_TAINTS_OFFSET 0x1e0

// Ftrace module map offsets
#define LINUX_FTRACE_MOD_MAP_LIST_OFFSET 0x10
#define LINUX_FTRACE_MOD_MAP_MOD_OFFSET 0x20

#endif  // OFFSETS_H